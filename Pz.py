##Модуль 1 Введение в Python
##Часть 1



## Задание 1
## Написать в словесной форме и нарисовать блок-схему
## алгоритма посещения кинотеатра.





## №1 Выбрать фильм:

## Просмотреть расписание кинотеатра.
## Выбрать фильм, который вы хотите посмотреть.

## №2 Проверить наличие билетов:

## Проверить, есть ли билеты на выбранный фильм.
## Если билетов нет, то вернуться к шагу 1.

## №3 Купить билет:

## Купить билет на выбранный фильм.
## Получить билет в виде бумажного или электронного документа.

## №4 Прийти в кинотеатр:

## Прийти в кинотеатр за определенное время до начала фильма.
## Предъявить билет сотруднику кинотеатра.

## №5 Посмотреть фильм:

## Зайти в зал, где показывают фильм.
## Посмотреть фильм.

## №6 Выйти из кинотеатра:

## Выйти из зала после окончания фильма.
## Покинуть кинотеатр.





## Блок-схема алгоритма:





# print("+-----------------+")
# print("|  Выбрать фильм  |")
# print("+-----------------+")
# print("        |")
# print("        |")
# print("        v")
# print("+-----------------+")
# print("| Проверить наличие|")
# print("|       билетов    |")
# print("+-----------------+")
# print("        |")
# print("        |")
# print("        v")
# print("+-----------------+")
# print("|  Купить билет    |")
# print("+-----------------+")
# print("        |")
# print("        |")
# print("        v")
# print("+-----------------+")
# print("|  Прийти в кинотеатр|")
# print("+-----------------+")
# print("        |")
# print("        |")
# print("        v")
# print("+-----------------+")
# print("|  Посмотреть фильм |")
# print("+-----------------+")
# print("        |")
# print("        |")
# print("        v")
# print("+-----------------+")
# print("|  Выйти из кинотеатра|")
# print("+-----------------+")





## Задание 2
## Написать в словесной форме и нарисовать блок-схему
## алгоритма игры в боулинг.

# №1 Инициализация игры:

# Игра начинается с приветственного сообщения и введения в правила боулинга.
# Запрашивается имя игрока, которое сохраняется для дальнейшего использования.
# Игра инициализирует счет до 0.
# Цикл игры

# №2 Игрока просят катить шар (бросать шар по дорожке):

# Количество сбитых кеглей генерируется случайным образом (от 0 до 10).
# Счет обновляется в зависимости от количества сбитых кеглей.
# Если игрок сбивает все 10 кеглей (страйк), игра начисляет бонус и переходит к следующему фрейму.
# Если игрок сбил несколько кеглей, но не все 10, игра позволяет ему сделать повторный бросок, чтобы попытаться сбить оставшиеся кегли.
# Игра повторяет шаги 2-5 до тех пор, пока игрок не сделает два броска или не собьет все 10 кеглей.
# Игра переходит к следующему фрейму и повторяет шаги 1-6, пока не будут завершены все 10 фреймов.

# №3 Окончание игры:

# После завершения всех 10 фреймов игра подсчитывает итоговый счет.
# Игра отображает итоговый счет и поздравляет игрока с окончанием игры.




# print("+---------------+")
# print("|  Game Init   |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Welcome     |")
# print("|  Get Player   |")
# print("|  Initialize  |")
# print("|  Score to 0   |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Game Loop    |")
# print("|  Roll Ball    |")
# print("|  Generate Pins|")
# print("|  Update Score |")
# print("|  Check Strike  |")
# print("|  Check Spare   |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Frame Complete|")
# print("|  Move to Next  |")
# print("|  Frame         |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Game Over    |")
# print("|  Calculate    |")
# print("|  Final Score  |")
# print("|  Display Score|")
# print("+---------------+")






## Задание 3
## Написать в словесной форме и нарисовать блок-схему
## алгоритма езды на велосипеде.


## Подготовка:

## Надеть шлем и перчатки
## Проверить исправность велосипеда (тормоза, цепь, давление в шинах)

## Запуск:
## Сесть на велосипед
## Оттолкнуться от земли и начать крутить педали

## Движение:
## Крутить педали и набирать скорость
## Управлять рулем для поддержания направления
## Использовать тормоза для снижения скорости или остановки

## Остановка:
## Нажать на тормоза для остановки велосипеда
## Снять ногу с педали и поставить ее на землю

## Завершение:
## Снять шлем и перчатки
## Проверить велосипед на наличие повреждений
## Блок-схема:

# print("+---------------+")
# print("|  Game Init   |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Welcome     |")
# print("|  Get Player   |")
# print("|  Initialize  |")
# print("|  Score to 0   |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Game Loop    |")
# print("|  Roll Ball    |")
# print("|  Generate Pins|")
# print("|  Update Score |")
# print("|  Check Strike  |")
# print("|  Check Spare   |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Frame Complete|")
# print("|  Move to Next  |")
# print("|  Frame         |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Game Over    |")
# print("|  Calculate    |")
# print("|  Final Score  |")
# print("|  Display Score|")
# print("+---------------+")





## Задание 4
## Написать в словесной форме и нарисовать блок-схему
## алгоритма покупки игровой приставки.

## Подготовка:
## Определить бюджет для покупки игровой приставки
## Исследовать различные модели и их характеристики

## Выбор приставки:
## Сравнить характеристики различных моделей
## Выбрать приставку, соответствующую бюджету и требованиям

## Проверка наличия:
## Проверить наличие выбранной приставки в магазине
## Если приставка не доступна, рассмотреть альтернативные варианты

## Покупка:
## Оформить покупку приставки
## Оплатить стоимость приставки

## Проверка и тестирование:
## Проверить приставку на наличие дефектов
## Протестировать приставку, чтобы убедиться в ее работоспособности

## Блок-схема:

# print("+---------------+")
# print("|  Подготовка  |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Выбор приставки |")
# print("|  Сравнить      |")
# print("|  характеристики |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Проверка наличия |")
# print("|  Проверить      |")
# print("|  наличие в магазине |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Покупка      |")
# print("|  Оформить покупку |")
# print("|  Оплатить стоимость |")
# print("+---------------+")
# print("           |")
# print("           |")
# print("           v")
# print("+---------------+")
# print("|  Проверка и    |")
# print("|  тестирование  |")
# print("|  Проверить на   |")
# print("|  дефекты и     |")
# print("|  протестировать |")
# print("+---------------+")







## Задание 1
## Выведите на экран надпись Nothing will work unless
## you do на разных строках. Пример вывода:
## Nothing
## will work
## unless you do.



# print("Nothing")
# print("will work")
# print("unless you do")




## Задание 2
## Выведите на экран надпись " Anyone who stops learning
## is old, whether at twenty or eighty" Henry Ford на разных
## строках. Пример вывода:
## “Anyone who
## stops
## learning is old,
## whether at twenty or eighty”.
## Henry Ford



# print("""
# “Anyone who
#     stops
#         learning is old,
#             whether at twenty or eighty”.
#                                     Henry Ford
# """)